// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orders.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderState int32

const (
	// Order has been funded and sent to the vendor but vendor has not yet responded
	OrderState_PENDING OrderState = 0
	// Waiting for the buyer to fund the payment address
	OrderState_AWAITING_PAYMENT OrderState = 1
	// Waiting for the customer to pick up the order (customer pickup option only)
	OrderState_AWAITING_PICKUP OrderState = 2
	// Order has been fully funded and we're waiting for the vendor to fulfill
	OrderState_AWAITING_FULFILLMENT OrderState = 3
	// Vendor has fulfilled part of the order
	OrderState_PARTIALLY_FULFILLED OrderState = 4
	// Vendor has fulfilled the order
	OrderState_FULFILLED OrderState = 5
	// Buyer has completed the order and left a review
	OrderState_COMPLETED OrderState = 6
	// Buyer canceled the order (offline order only)
	OrderState_CANCELED OrderState = 7
	// Vendor declined to confirm the order (offline order only)
	OrderState_DECLINED OrderState = 8
	// Vendor refunded the order
	OrderState_REFUNDED OrderState = 9
	// Contract is under active dispute
	OrderState_DISPUTED OrderState = 10
	// The moderator has resolved the dispute and we are waiting for the winning party to
	// accept the payout.
	OrderState_DECIDED OrderState = 11
	// The winning party has accepted the dispute and it is now complete. After the buyer
	// leaves a review the state should be set to COMPLETE.
	OrderState_RESOLVED OrderState = 12
	// Escrow has been released after waiting the timeout period. After the buyer
	// leaves a review the state should be set to COMPLETE.
	OrderState_PAYMENT_FINALIZED OrderState = 13
	// We screwed up and produced a order which didn't validate. This state is only used for offline orders. If a processing
	// error occurred with an open connection between buyer and vendor the vendor just rejects the order on the spot neither party
	// commits the order to the database.
	OrderState_PROCESSING_ERROR OrderState = 14
)

var OrderState_name = map[int32]string{
	0:  "PENDING",
	1:  "AWAITING_PAYMENT",
	2:  "AWAITING_PICKUP",
	3:  "AWAITING_FULFILLMENT",
	4:  "PARTIALLY_FULFILLED",
	5:  "FULFILLED",
	6:  "COMPLETED",
	7:  "CANCELED",
	8:  "DECLINED",
	9:  "REFUNDED",
	10: "DISPUTED",
	11: "DECIDED",
	12: "RESOLVED",
	13: "PAYMENT_FINALIZED",
	14: "PROCESSING_ERROR",
}

var OrderState_value = map[string]int32{
	"PENDING":              0,
	"AWAITING_PAYMENT":     1,
	"AWAITING_PICKUP":      2,
	"AWAITING_FULFILLMENT": 3,
	"PARTIALLY_FULFILLED":  4,
	"FULFILLED":            5,
	"COMPLETED":            6,
	"CANCELED":             7,
	"DECLINED":             8,
	"REFUNDED":             9,
	"DISPUTED":             10,
	"DECIDED":              11,
	"RESOLVED":             12,
	"PAYMENT_FINALIZED":    13,
	"PROCESSING_ERROR":     14,
}

func (x OrderState) String() string {
	return proto.EnumName(OrderState_name, int32(x))
}

func (OrderState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0f5d4cf0fc9e41b, []int{0}
}

func init() {
	proto.RegisterEnum("OrderState", OrderState_name, OrderState_value)
}

func init() { proto.RegisterFile("orders.proto", fileDescriptor_e0f5d4cf0fc9e41b) }

var fileDescriptor_e0f5d4cf0fc9e41b = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0x90, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0x21, 0x94, 0xfe, 0x4c, 0x53, 0x30, 0x6e, 0x11, 0x9c, 0x81, 0x05, 0x1b, 0x4e, 0x60,
	0x1c, 0x07, 0x8d, 0x98, 0xda, 0x96, 0x9d, 0x80, 0xda, 0x4d, 0x45, 0x45, 0xd7, 0xa9, 0x42, 0xae,
	0xc2, 0x7d, 0xf1, 0x04, 0x68, 0x96, 0xdf, 0xfb, 0x9e, 0x25, 0xbf, 0x81, 0xbc, 0x69, 0x3f, 0x0f,
	0xed, 0xd7, 0xe3, 0xb1, 0x6d, 0xba, 0xe6, 0xe1, 0x3b, 0x03, 0x70, 0x1c, 0xc4, 0xee, 0xa3, 0x3b,
	0xc8, 0x39, 0x4c, 0xbc, 0xb1, 0x05, 0xda, 0x17, 0x71, 0x26, 0x57, 0x20, 0xd4, 0xbb, 0xc2, 0x2a,
	0xd1, 0xce, 0xab, 0xcd, 0xda, 0xd8, 0x4a, 0x9c, 0xcb, 0x25, 0x5c, 0x0f, 0x29, 0xea, 0xd7, 0xda,
	0x8b, 0x4c, 0xde, 0xc3, 0xea, 0x14, 0x96, 0x35, 0x95, 0x48, 0xd4, 0xd7, 0x2f, 0xe4, 0x1d, 0x2c,
	0xbd, 0x0a, 0x15, 0x2a, 0xa2, 0xcd, 0xbf, 0x32, 0x85, 0x18, 0xc9, 0x05, 0xcc, 0x06, 0xbc, 0x64,
	0xd4, 0x6e, 0xed, 0xc9, 0x54, 0x09, 0xc7, 0x32, 0x87, 0xa9, 0x56, 0x56, 0x1b, 0x96, 0x13, 0xa6,
	0xc2, 0x68, 0x42, 0x9b, 0x68, 0xca, 0x14, 0x4c, 0x59, 0xdb, 0x22, 0xd1, 0xac, 0x77, 0x18, 0x7d,
	0xcd, 0xef, 0x80, 0x07, 0xa4, 0x26, 0xb2, 0x9a, 0xff, 0x16, 0xa3, 0xa3, 0xb7, 0x44, 0xb9, 0xbc,
	0x85, 0x9b, 0xbf, 0x15, 0xbb, 0x12, 0xad, 0x22, 0xdc, 0xa6, 0x78, 0xc1, 0x2b, 0x7d, 0x70, 0xda,
	0xc4, 0xc8, 0x9f, 0x37, 0x21, 0xb8, 0x20, 0xae, 0x9e, 0x47, 0xdb, 0xec, 0xb8, 0xdf, 0x8f, 0xfb,
	0x23, 0x3d, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf5, 0xa4, 0x45, 0x88, 0x34, 0x01, 0x00, 0x00,
}
